/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface AppArrows {
    'dataName': string;
    'direction': string;
    'selected': boolean;
    'text': string;
  }
  interface AppArrowsAttributes extends StencilHTMLAttributes {
    'dataName'?: string;
    'direction'?: string;
    'selected'?: boolean;
    'text'?: string;
  }

  interface AppTable {
    'bindData': (data: any) => void;
  }
  interface AppTableAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'AppArrows': Components.AppArrows;
    'AppTable': Components.AppTable;
  }

  interface StencilIntrinsicElements {
    'app-arrows': Components.AppArrowsAttributes;
    'app-table': Components.AppTableAttributes;
  }


  interface HTMLAppArrowsElement extends Components.AppArrows, HTMLStencilElement {}
  var HTMLAppArrowsElement: {
    prototype: HTMLAppArrowsElement;
    new (): HTMLAppArrowsElement;
  };

  interface HTMLAppTableElement extends Components.AppTable, HTMLStencilElement {}
  var HTMLAppTableElement: {
    prototype: HTMLAppTableElement;
    new (): HTMLAppTableElement;
  };

  interface HTMLElementTagNameMap {
    'app-arrows': HTMLAppArrowsElement
    'app-table': HTMLAppTableElement
  }

  interface ElementTagNameMap {
    'app-arrows': HTMLAppArrowsElement;
    'app-table': HTMLAppTableElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
